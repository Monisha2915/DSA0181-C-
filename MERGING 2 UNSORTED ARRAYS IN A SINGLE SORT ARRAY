#include <iostream>
using namespace std;

// Function to merge two sorted arrays into a single sorted array
void mergeArrays(int arr1[], int n1, int arr2[], int n2, int merged[]) {
    int i = 0, j = 0, k = 0;

    // Merge the arrays while there are elements in both arrays
    while (i < n1 && j < n2) {
        if (arr1[i] < arr2[j]) {
            merged[k++] = arr1[i++];  // Add element from arr1 to merged array
        } else {
            merged[k++] = arr2[j++];  // Add element from arr2 to merged array
        }
    }

    // If any elements remain in arr1, add them to merged
    while (i < n1) {
        merged[k++] = arr1[i++];
    }

    // If any elements remain in arr2, add them to merged
    while (j < n2) {
        merged[k++] = arr2[j++];
    }
}

int main() {
    int n1, n2;

    // Input size of first array
    cout << "Enter the number of elements in the first array: ";
    cin >> n1;
    int arr1[n1];

    // Input elements of the first sorted array
    cout << "Enter " << n1 << " sorted elements for the first array:" << endl;
    for (int i = 0; i < n1; i++) {
        cin >> arr1[i];
    }

    // Input size of second array
    cout << "Enter the number of elements in the second array: ";
    cin >> n2;
    int arr2[n2];

    // Input elements of the second sorted array
    cout << "Enter " << n2 << " sorted elements for the second array:" << endl;
    for (int i = 0; i < n2; i++) {
        cin >> arr2[i];
    }

    // Create an array to store the merged result
    int merged[n1 + n2];

    // Merge the two arrays
    mergeArrays(arr1, n1, arr2, n2, merged);

    // Output the merged array
    cout << "Merged sorted array: ";
    for (int i = 0; i < n1 + n2; i++) {
        cout << merged[i] << " ";
    }
    cout << endl;

    return 0;
}
