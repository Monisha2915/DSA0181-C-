#include <iostream>
#include <vector>
using namespace std;

// Function to perform Binary Search
int binarySearch(const vector<int>& arr, int target) {
    int left = 0, right = arr.size() - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2; // Calculate the middle index

        // Check if the target is at the mid index
        if (arr[mid] == target) {
            return mid; // Target found
        }
        // If the target is smaller, it must be in the left half
        else if (arr[mid] > target) {
            right = mid - 1;
        }
        // If the target is larger, it must be in the right half
        else {
            left = mid + 1;
        }
    }

    return -1; // Target not found
}

int main() {
    int n, target;

    // Input the size of the array
    cout << "Enter the size of the array: ";
    cin >> n;

    vector<int> arr(n);

    // Input the sorted array elements
    cout << "Enter the sorted array elements:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Input the target value to search
    cout << "Enter the target value: ";
    cin >> target;

    // Perform binary search
    int result = binarySearch(arr, target);

    // Output the result
    if (result != -1) {
        cout << "Target found at index: " << result << endl;
    } else {
        cout << "Target not found in the array." << endl;
    }

    return 0;
}
